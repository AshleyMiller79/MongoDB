

// /=================================================================
//                     TEMEL KOMUTLAR
// =================================================================

// -----------------------------------------------------------------
// 1) Varol an veritabanlarini listelemek icin. 
// //-----------------------------------------------------------------
 show dbs;

// -----------------------------------------------------------------
// 2) Veritabani tanimlamak veya icine girmek icin 
// -----------------------------------------------------------------use tablo ismi hep açık olmalı, sorgu yaparken sorgu seçili olmamalı
use("kisiler");

// db yi büyük harfle ver collections la karışmasın
use("kisiler");
// -----------------------------------------------------------------
// 3) Icinde bulundugumuz (aktif) Veritabanini gormek icin
// //----------------------------------------------------------------
 db;

// -----------------------------------------------------------------
// 4) Aktif olan veritabanini silmek icin  
// -----------------------------------------------------------------
db.dropDatabase();

// -----------------------------------------------------------------
// 5) Aktif olan veritabaninda bir collection olusturmak icin
// //-----------------------------------------------------------------
use("kisiler");
 db.createCollection("ogrenciler");

// -----------------------------------------------------------------
// 6) Bir collection'ı silmek icin 
// -----------------------------------------------------------------
use("kisiler");
 db.ogrenciler.drop();

// -----------------------------------------------------------------
// 7) collection'a bir dokuman eklemek icin
// -----------------------------------------------------------------
use("kisiler")
db.ogrenciler.insertOne({"ad": "Murat", "soyad": "Cakir", "yas": 41});

// -----------------------------------------------------------------
// 8) Collection'daki tum dokumanlari listelemek (SORGU-QUERY)icin.
// //-----------------------------------------------------------------
use("kisiler");
db.ogrenciler.find();

// -----------------------------------------------------------------
// 9) Collection'a birden fazla dokuman eklemek icin
// -----------------------------------------------------------------
use("kisiler")
db.ogrenciler.insertMany([
 {"ad": "Ahmet", "soyad": "Can", "yas": 21},
 {"ad": "Ali", "soyad": "Can", "yas": 51},
 {"ad": "Veli", "soyad": "Gel", "yas": 22}] );
 
// -----------------------------------------------------------------
// 10) Bir degiskeni (tarih) eklemek icin 
// -----------------------------------------------------------------
use("kisiler")
var tarih = new Date();
db.ogrenciler.insertOne({"suanki_tarih": tarih});
db.ogrenciler.find();

use("kisiler")
var tarih1 = new ISODate();
var ay = tarih1.getMonth();
db.ogrenciler.insertOne({"ad":"can", "soyad":"gelir", "yas": 20, "dogumAyi": ay})
use("kisiler")
db.ogrenciler.find();

//Uluslararası Standardizasyon Örgütü (ISO=The International Organization for Standardization ) tarih formatı, belirsizliği ortadan kaldıran sayısal bir takvim tarihini ifade etmenin standart bir yoludur . Örneğin, Kuzey Amerikalılar genellikle tarihten önceki ayı yazarlar. Avrupalılar aydan önceki tarihi 30 Mart 1998 için "30.3. 1998" olarak yazarlar.

